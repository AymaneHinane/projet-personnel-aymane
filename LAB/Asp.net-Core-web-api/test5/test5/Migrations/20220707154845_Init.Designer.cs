// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using test5.Data;

#nullable disable

namespace test5.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220707154845_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CategoryGame", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "GamesId");

                    b.HasIndex("GamesId");

                    b.ToTable("GameCategory", (string)null);
                });

            modelBuilder.Entity("GameStudiot", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("StudiotsId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "StudiotsId");

                    b.HasIndex("StudiotsId");

                    b.ToTable("GameStudiot");
                });

            modelBuilder.Entity("test5.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GameCategory")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("test5.Models.Editor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Editor");
                });

            modelBuilder.Entity("test5.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Editorid")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StudiotId")
                        .HasColumnType("int");

                    b.Property<int>("job")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Editorid");

                    b.HasIndex("StudiotId");

                    b.HasIndex("LastName", "FirstName")
                        .IsUnique();

                    b.ToTable("Employee");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Employee");
                });

            modelBuilder.Entity("test5.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EditorId")
                        .HasColumnType("int");

                    b.Property<int>("GameStateId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EditorId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("test5.Models.GameState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AnnoucementDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("InProduction")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProjectStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("GameStates");
                });

            modelBuilder.Entity("test5.Models.Studiot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EditorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EditorId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Studio");
                });

            modelBuilder.Entity("test5.Models.Productor", b =>
                {
                    b.HasBaseType("test5.Models.Employee");

                    b.HasDiscriminator().HasValue("Productor");
                });

            modelBuilder.Entity("CategoryGame", b =>
                {
                    b.HasOne("test5.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("test5.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameStudiot", b =>
                {
                    b.HasOne("test5.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("test5.Models.Studiot", null)
                        .WithMany()
                        .HasForeignKey("StudiotsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("test5.Models.Employee", b =>
                {
                    b.HasOne("test5.Models.Editor", "Editor")
                        .WithMany("Employees")
                        .HasForeignKey("Editorid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("test5.Models.Studiot", "Studiot")
                        .WithMany("Employees")
                        .HasForeignKey("StudiotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Editor");

                    b.Navigation("Studiot");
                });

            modelBuilder.Entity("test5.Models.Game", b =>
                {
                    b.HasOne("test5.Models.Editor", "Editor")
                        .WithMany("Games")
                        .HasForeignKey("EditorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Editor");
                });

            modelBuilder.Entity("test5.Models.GameState", b =>
                {
                    b.HasOne("test5.Models.Game", "Game")
                        .WithOne("GameState")
                        .HasForeignKey("test5.Models.GameState", "GameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("test5.Models.Studiot", b =>
                {
                    b.HasOne("test5.Models.Editor", "Editor")
                        .WithMany("Studiots")
                        .HasForeignKey("EditorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Editor");
                });

            modelBuilder.Entity("test5.Models.Editor", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Games");

                    b.Navigation("Studiots");
                });

            modelBuilder.Entity("test5.Models.Game", b =>
                {
                    b.Navigation("GameState")
                        .IsRequired();
                });

            modelBuilder.Entity("test5.Models.Studiot", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
