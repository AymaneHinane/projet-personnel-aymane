// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Project.Repository;

#nullable disable

namespace Project.Api.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230906144604_postgresInit")]
    partial class postgresInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7f3950fa-9093-492b-9a9a-0f4b41138c34",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "466381e5-3ef0-45fd-b2f3-52a027e5d4d8",
                            Name = "SURAC",
                            NormalizedName = "SURAC"
                        },
                        new
                        {
                            Id = "271b1113-e4a8-4031-b99f-f203932cf51a",
                            Name = "SUTA",
                            NormalizedName = "SUTA"
                        },
                        new
                        {
                            Id = "f753d221-c96e-486b-ac40-403dd11ea541",
                            Name = "COSUMAR ZAIO",
                            NormalizedName = "COSUMAR ZAIO"
                        },
                        new
                        {
                            Id = "999f3d6b-9626-401f-a863-b86d79f7cb3a",
                            Name = "SUNABEL",
                            NormalizedName = "SUNABEL"
                        },
                        new
                        {
                            Id = "8a8e723c-d8d1-46b5-a2e4-c17705b5dee3",
                            Name = "COSUMAR SIDI BENNOUR",
                            NormalizedName = "COSUMAR SIDI BENNOUR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Entities.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Excl_taxes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Incl_taxes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("InvoiceCategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("text");

                    b.Property<byte[]>("InvoicePdf")
                        .HasColumnType("bytea");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceCategoryId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Project.Entities.Models.InvoiceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InvoiceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a8bb548-eafb-463c-a464-2c1f50533236"),
                            Category = "Main d'oeuvre"
                        },
                        new
                        {
                            Id = new Guid("34d14645-8b66-440a-b4e9-c9e8191a8bc8"),
                            Category = "Transport de distribution"
                        },
                        new
                        {
                            Id = new Guid("15bd2baf-b829-4a55-afd4-7cfdf7671dbc"),
                            Category = "Transport de Matières premières"
                        },
                        new
                        {
                            Id = new Guid("3263e398-73e6-4460-9c75-0ed7b923612a"),
                            Category = "Sacs"
                        },
                        new
                        {
                            Id = new Guid("a51f6b67-1a85-4c0f-aa24-01cd2bc684fa"),
                            Category = "Manutention"
                        },
                        new
                        {
                            Id = new Guid("ac1c2389-a285-46cb-adb8-229ffc11029e"),
                            Category = "Eléctricité"
                        },
                        new
                        {
                            Id = new Guid("e3128d6c-7e72-4dce-b6a6-4a1f1029e049"),
                            Category = "Location Chariot"
                        },
                        new
                        {
                            Id = new Guid("4424f14b-6415-46df-86ce-036d86e3a451"),
                            Category = "Location Chargeuse"
                        },
                        new
                        {
                            Id = new Guid("e7a8bca7-d4d8-46ff-be42-cc3d58bf0cf4"),
                            Category = "Gasoil"
                        },
                        new
                        {
                            Id = new Guid("553ce4ae-4dd7-49d3-953a-ac1a9fa9bbd6"),
                            Category = "Consommables"
                        },
                        new
                        {
                            Id = new Guid("f86fc5ec-e49f-4d14-a5c5-5f3c67bafe8b"),
                            Category = "Analyse d'engrais"
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4436ef77-4ba3-4265-b265-968da0b04730"),
                            Name = "KCL",
                            category = "rawMaterial"
                        },
                        new
                        {
                            Id = new Guid("8580a5c2-e5aa-430e-9b67-598d4e988c2d"),
                            Name = "DAP",
                            category = "rawMaterial"
                        },
                        new
                        {
                            Id = new Guid("b7cf76e8-affa-45c6-a0f2-74add38778eb"),
                            Name = "TSP",
                            category = "rawMaterial"
                        },
                        new
                        {
                            Id = new Guid("9f533133-2ad6-4b20-92f0-f66c105841fe"),
                            Name = "UREE",
                            category = "rawMaterial"
                        },
                        new
                        {
                            Id = new Guid("a9d2fe5e-0d38-493c-a700-ed63485686e0"),
                            Name = "ACIDE HUMIQUE",
                            category = "rawMaterial"
                        },
                        new
                        {
                            Id = new Guid("bab91ca4-100c-4a9c-ba75-b447c0b721c3"),
                            Name = "AMMONITRATE",
                            category = "rawMaterial"
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.RecipientTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("DeliveredStock")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TransferOperationId")
                        .HasColumnType("uuid");

                    b.Property<string>("TransferStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("TransferOperationId", "RecipientId")
                        .IsUnique();

                    b.ToTable("RecipientTransfers");
                });

            modelBuilder.Entity("Project.Entities.Models.Recipients", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TransferId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TransferId");

                    b.HasIndex("RecipientId", "TransferId")
                        .IsUnique();

                    b.ToTable("Recipients");
                });

            modelBuilder.Entity("Project.Entities.Models.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("ConsumeStock")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("DAPStock")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("DeliverStock")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("LastYearRemainingStock")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("OrderStock")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("RemainingStock")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("StockProduced")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TransferedStockEntryTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TransferedStockExitTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("productId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("warehouseId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("warehouseId");

                    b.HasIndex("productId", "warehouseId")
                        .IsUnique();

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Project.Entities.Models.StockChangeHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("NewValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("OldValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductCategory")
                        .HasColumnType("integer");

                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.Property<string>("PropertyNameEng")
                        .HasColumnType("text");

                    b.Property<string>("PropertyNameFr")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("warehouseId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("warehouseId");

                    b.ToTable("StockChangeHistories");
                });

            modelBuilder.Entity("Project.Entities.Models.Transfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("DeliveredStockQuantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DestinationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Numero"));

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TransferStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("TransferedStockQuantity")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SenderId");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("Project.Entities.Models.TransferHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EditedField")
                        .HasColumnType("text");

                    b.Property<decimal?>("NewValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("OldValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("text");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.Property<Guid?>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientName")
                        .HasColumnType("text");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<string>("SenderName")
                        .HasColumnType("text");

                    b.Property<int>("TranferNumero")
                        .HasColumnType("integer");

                    b.Property<Guid?>("TransferId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.HasIndex("TransferId");

                    b.ToTable("TransferHistories");
                });

            modelBuilder.Entity("Project.Entities.Models.TransferOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("EntryStockWeight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<byte[]>("EntryVoucher")
                        .HasColumnType("bytea");

                    b.Property<decimal?>("ExitStockWeight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<byte[]>("ExitVoucher")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("TransferId")
                        .HasColumnType("uuid");

                    b.Property<string>("TransferStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TruckNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TransferId");

                    b.ToTable("TransferOperation");
                });

            modelBuilder.Entity("Project.Entities.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Project.Entities.Models.Warehouse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("WarehouseRegion")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("148dbd99-602a-4803-8a0a-ee6c8fa3e6ca"),
                            Name = "COSUMAR SIDI BENNOUR",
                            WarehouseType = "site"
                        },
                        new
                        {
                            Id = new Guid("84eb157b-383f-485c-a642-6251441e6d33"),
                            Name = "SUTA",
                            WarehouseType = "site"
                        },
                        new
                        {
                            Id = new Guid("963a84c6-85dd-4f5d-bb5a-b1c2e7d92970"),
                            Name = "SUNABEL",
                            WarehouseType = "site"
                        },
                        new
                        {
                            Id = new Guid("c2bd6e27-8994-4156-b470-750a4b6dd467"),
                            Name = "COSUMAR ZAIO",
                            WarehouseType = "site"
                        },
                        new
                        {
                            Id = new Guid("a948ea36-9fe5-43f2-bc7e-027f6c67f0cd"),
                            Name = "SURAC",
                            WarehouseType = "site"
                        },
                        new
                        {
                            Id = new Guid("9aaeffba-e7f3-4480-be43-e06ed561aa60"),
                            Name = "212",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("0f1f8d94-fd2e-4a11-97da-06317c69bf62"),
                            Name = "221",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("f84c3923-7736-4a13-a81a-7f04d400bdce"),
                            Name = "223",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("c78df6d0-2bad-44ec-9c4b-db13f9a0fe9d"),
                            Name = "225",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("3edcf2ba-de09-4622-9459-ca43977cd4cd"),
                            Name = "231",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("4ecd556d-7245-478c-8cf3-3dc854541a37"),
                            Name = "233",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("32ae3428-d477-46df-9ab6-c7bf8b2b5659"),
                            Name = "235",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("fd582356-a378-4724-9a2c-439f15775471"),
                            Name = "2202",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("da46877b-8f17-4cb5-b696-ab249f110b55"),
                            Name = "211-222",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("6f5581cb-b7d8-499c-96ce-332f0f7a58b9"),
                            Name = "214-246-217",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("1b4fd25c-1252-441f-bb43-b0262392e2e0"),
                            Name = "246-247",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("f64f1686-6393-4744-abf0-160ec12b51ce"),
                            Name = "224-226",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("d985408b-f99c-4b3f-a833-b39a90ceff75"),
                            Name = "218-241",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("1218f634-58ee-4625-a678-0215723779f3"),
                            Name = "234-242",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("9a2d100e-aaf8-4643-8fc2-c845e57b051d"),
                            Name = "236-237",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("701d8c10-1705-44f8-b214-2be19bffbb2c"),
                            Name = "213",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("55b085af-3dc2-4e54-b1e2-0920cd625057"),
                            Name = "243-943",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("5c68463e-0a95-4aee-85b3-baa8e989d7d5"),
                            Name = "244-245",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("84e3e39d-71d6-40d3-9b42-3d48cf5843e7"),
                            Name = "901",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("9da3395d-e98b-4a4c-8541-24138f872c0c"),
                            Name = "906",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("6e1ca860-6cab-46cd-9e1d-0e29a6948505"),
                            Name = "909",
                            WarehouseRegion = "SUNABEL_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("39c12cc8-e7e9-4c55-9ef1-a8bdac6f9040"),
                            Name = "901",
                            WarehouseRegion = "SUNABEL_LOUKKOS",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("e47f1a3d-65bc-4c6c-889c-0f9ffc1d26cb"),
                            Name = "906",
                            WarehouseRegion = "SUNABEL_LOUKKOS",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("9487367e-9956-4923-8f69-5487753ad4be"),
                            Name = "909",
                            WarehouseRegion = "SUNABEL_LOUKKOS",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("54249fa6-9bbf-47b9-9a74-f297d8849e53"),
                            Name = "221",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("ccc33ad3-4e61-42c8-b4a4-bd9a27d46738"),
                            Name = "223",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("310b0a03-431b-4bfd-a794-a36fe0cc2850"),
                            Name = "225",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("6fa3b325-8509-4a93-874f-89f2d97661a0"),
                            Name = "231",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("6894b368-3f2a-441f-ba05-82a27e12655b"),
                            Name = "233",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("288e8aa3-2c91-4b19-9d8e-0959ab39e112"),
                            Name = "235",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("1199cf49-b675-4367-9b85-ed6ddeedbb48"),
                            Name = "211-222",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("8d87e8d7-a7f6-4946-9344-3c9c09e0b02a"),
                            Name = "217",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("677d7486-6459-4d75-b2b0-6e22d5f3a9b7"),
                            Name = "246-247",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("8c1a76c8-067c-40fc-bbf2-2ded5d95deb3"),
                            Name = "224-226",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("05c2b649-4b87-413e-a02a-6e82a12a1b34"),
                            Name = "218-241",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("beef3e5d-d8a1-427a-9cdc-ab9696abf449"),
                            Name = "234-242",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("51b6d8f3-4c35-4564-aa4c-d7cea1b5758a"),
                            Name = "236-237",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("b6520c8f-246c-4034-b6ac-979a59ad534f"),
                            Name = "243-943",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("4df39384-729c-4f58-b6e0-b736cf171900"),
                            Name = "244-245",
                            WarehouseRegion = "SURAC_GHARB",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("7f39e309-ad64-4fbc-9b8c-b4fbbf960cd4"),
                            Name = "901-909",
                            WarehouseRegion = "SURAC_CANNE",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("c0c4b904-e97b-483a-8b4c-ddef5ebd0486"),
                            Name = "903",
                            WarehouseRegion = "SURAC_CANNE",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("b626eba3-1ba2-430c-a794-12ab302ce222"),
                            Name = "906",
                            WarehouseRegion = "SURAC_CANNE",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("35007bcc-dbc9-40c7-aa61-155853631e4d"),
                            Name = "501/502/511",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("5162df2c-3ecc-4a1f-82be-11a15408230e"),
                            Name = "503",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("955469f8-c4b0-4efc-af93-4f3fc999f04c"),
                            Name = "504",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("701145ec-a1b1-4d0c-8438-8467dff0987d"),
                            Name = "505/510/512",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("60aaa4f3-a55b-4d77-b50a-2afc75f35cf9"),
                            Name = "506",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("bc56e4bd-c0b1-4f6e-ab62-f8459dd4d09d"),
                            Name = "507",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("c561527f-437c-4f7c-a388-285d782e71ee"),
                            Name = "508",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("b51028cb-0ca2-4141-9618-b07145481abc"),
                            Name = "509",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("ec417426-2c4b-43da-8227-7bbebe9c49b3"),
                            Name = "520",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("2b25c366-c63c-4fc7-a257-84d8f2771b0b"),
                            Name = "521",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("8ed5c72c-f600-4db3-9cd0-00f729a8601f"),
                            Name = "522",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("b7e6df3f-aab2-4b2b-b119-ce1bb7665511"),
                            Name = "524",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("bde361c5-3ba7-4319-a766-0748dbef1232"),
                            Name = "525",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("8bfd1680-4a5e-4cb0-8054-528f791e50a2"),
                            Name = "526",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("7210ab96-8812-49be-bc27-60e554b329c0"),
                            Name = "527",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("ed9c654f-4087-4611-add4-0c9aeb42c377"),
                            Name = "528",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("f55e5b0d-83b8-4402-9433-2237ba3bba41"),
                            Name = "529",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("54be1ecc-597f-4551-9fd6-7831b29790f7"),
                            Name = "530",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("b96d9aad-1169-4030-a919-d7abaea5357e"),
                            Name = "531",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("b54a1052-7140-4b36-a2e3-8788a97590ea"),
                            Name = "532",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("05d1b779-e3b8-47cd-b993-8f1f6f05da7a"),
                            Name = "533",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("ff2204b9-3ea8-4161-975f-e8833465a710"),
                            Name = "534-538",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("f10d7f01-0851-4c16-8af3-f1019b1286bf"),
                            Name = "535",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("315f3187-ffbe-4bab-bdd8-38c9ea774adf"),
                            Name = "536",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("d617507d-f7f5-4f07-83c8-c4a51637595c"),
                            Name = "537",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("c966fabf-410b-4e8e-b36f-ba1c7f67723e"),
                            Name = "1104/1-2-3",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("80abbdd2-0f9e-48dc-8b6e-f29a3770d45b"),
                            Name = "1104/4-7",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("50f266f8-d795-4760-9c0c-c05eb79ac8d0"),
                            Name = "1104/5-8",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("36521355-e9b7-44b3-9291-99ac13c72176"),
                            Name = "1104/6",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("686a6256-1fdb-4350-a402-3882cd347a96"),
                            Name = "1104/9",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("791c5147-415c-4c60-b81f-6bf5e82cfde2"),
                            Name = "1107",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("30b351e9-4472-438c-aa17-36e6a239c9c8"),
                            Name = "404",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("fbae2eaa-fe0a-4404-8db9-71c3ed94ab71"),
                            Name = "2404",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("18ada911-3a67-4666-a14d-27bcd96d1e40"),
                            Name = "1504",
                            WarehouseRegion = "SUTA",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("49f628cd-1fef-4f92-a25c-f56ecc7ed1a0"),
                            Name = "PhytoBerkane",
                            WarehouseRegion = "ZAIO",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("cc730cda-69b5-42b6-8e6d-518c50668e66"),
                            Name = "Etablissement CHICKRI",
                            WarehouseRegion = "ZAIO",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("fe93782b-e08f-40b7-9eed-331e5e418f60"),
                            Name = "Bouyahyie FELLAH",
                            WarehouseRegion = "ZAIO",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("5b32fa0c-e7d6-4dc9-8d2f-ddedd3c3ebdf"),
                            Name = "AGROSSAR",
                            WarehouseRegion = "ZAIO",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("2f4173fa-b41f-4309-8a17-81285023ca41"),
                            Name = "310",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("ff1fb08f-158d-4b1d-8346-a39e8841124b"),
                            Name = "311",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("1cf5a15d-5bb3-490c-a212-45ceeec22365"),
                            Name = "312",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("da1921c3-d6da-478f-b4c8-94c9c003e48b"),
                            Name = "332",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("26b0d281-dd5c-47f9-ae05-2da0cd219a94"),
                            Name = "351",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("c31d7f27-3806-4a1b-9892-4d31666b93f6"),
                            Name = "352",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("c2a195e7-7f53-4be5-a3e3-3e64c9735837"),
                            Name = "330",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("bb6de288-3620-4ffb-8b37-ad35f0d9d095"),
                            Name = "331",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("bf41a037-d9fb-4ac7-ba88-e618747e7765"),
                            Name = "333",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("a004cf49-4772-4c08-90b3-cf6915e18053"),
                            Name = "335",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("12000c54-09d6-43f3-9505-5c2155099a39"),
                            Name = "336",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("c8f69301-e79a-4a0a-9ae2-233195f1239f"),
                            Name = "337",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("7da6e83e-06df-4156-a84c-295ad73b686d"),
                            Name = "338",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("cf051303-6ae5-48cc-bcf8-cdb2e82c6812"),
                            Name = "353",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("9195edf5-7605-422f-8bb0-9ab4b729294c"),
                            Name = "354",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("14a4c70a-6a82-4d1e-902f-b2d9bd9f5373"),
                            Name = "360",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("72f9a741-d736-4040-88c1-6b3333c9124c"),
                            Name = "361",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("b97408c1-cb48-44f3-8506-94103ece669f"),
                            Name = "362",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("e7a807df-2627-41f9-a15b-8fc84a994526"),
                            Name = "320",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("430e7f1d-600d-4843-82d0-837066dd677b"),
                            Name = "321",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("3f14a919-d7fa-4cb2-95d2-dcfb14a13694"),
                            Name = "322",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("41562eaa-735d-4ce9-9b42-cdd6c44bc7f1"),
                            Name = "324",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("992c0dfa-cc81-4f82-93b9-e846c1b52c10"),
                            Name = "325",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("6b48d6d2-c40c-45da-92ce-e88b020206b9"),
                            Name = "340",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("48513294-21c9-4bab-925d-1eb3a7c1a1de"),
                            Name = "341",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("7bf334ec-9229-4ae5-ac76-faa5e661fabb"),
                            Name = "342",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("83efd78e-174f-4d57-9ed0-28549c502cc7"),
                            Name = "343",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("7811ac4b-1262-4a52-82ac-fb7735714d97"),
                            Name = "363",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        },
                        new
                        {
                            Id = new Guid("7ab89f0a-16f8-4eef-9957-2bc63508c658"),
                            Name = "400",
                            WarehouseRegion = "SIDI_BENNOUR",
                            WarehouseType = "distributionCenter"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Project.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Project.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Project.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Entities.Models.Invoice", b =>
                {
                    b.HasOne("Project.Entities.Models.InvoiceCategory", "InvoiceCategory")
                        .WithMany("Invoices")
                        .HasForeignKey("InvoiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Warehouse", "Warehouse")
                        .WithMany("Invoices")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceCategory");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Project.Entities.Models.RecipientTransfer", b =>
                {
                    b.HasOne("Project.Entities.Models.Recipients", "Recipient")
                        .WithMany("RecipientTransfers")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.TransferOperation", "transferOperation")
                        .WithMany("RecipientTransfers")
                        .HasForeignKey("TransferOperationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("transferOperation");
                });

            modelBuilder.Entity("Project.Entities.Models.Recipients", b =>
                {
                    b.HasOne("Project.Entities.Models.Warehouse", "Recipient")
                        .WithMany("deliveries")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Transfer", "Transfer")
                        .WithMany("Recipients")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("Project.Entities.Models.Stock", b =>
                {
                    b.HasOne("Project.Entities.Models.Product", "product")
                        .WithMany("Stocks")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Warehouse", "warehouse")
                        .WithMany("Stocks")
                        .HasForeignKey("warehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("Project.Entities.Models.StockChangeHistory", b =>
                {
                    b.HasOne("Project.Entities.Models.Warehouse", "warehouse")
                        .WithMany("stockChangeHistories")
                        .HasForeignKey("warehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("Project.Entities.Models.Transfer", b =>
                {
                    b.HasOne("Project.Entities.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Warehouse", "Sender")
                        .WithMany("transfers")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Project.Entities.Models.TransferHistory", b =>
                {
                    b.HasOne("Project.Entities.Models.Product", "Product")
                        .WithMany("TransferHistory")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Warehouse", "Recipient")
                        .WithMany("DeliveryHistory")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Project.Entities.Models.Warehouse", "Sender")
                        .WithMany("TransferHistory")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Transfer", "Transfer")
                        .WithMany("TransferHistory")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Product");

                    b.Navigation("Recipient");

                    b.Navigation("Sender");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("Project.Entities.Models.TransferOperation", b =>
                {
                    b.HasOne("Project.Entities.Models.Transfer", "Transfer")
                        .WithMany("TransferOperations")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("Project.Entities.Models.InvoiceCategory", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Project.Entities.Models.Product", b =>
                {
                    b.Navigation("Stocks");

                    b.Navigation("TransferHistory");
                });

            modelBuilder.Entity("Project.Entities.Models.Recipients", b =>
                {
                    b.Navigation("RecipientTransfers");
                });

            modelBuilder.Entity("Project.Entities.Models.Transfer", b =>
                {
                    b.Navigation("Recipients");

                    b.Navigation("TransferHistory");

                    b.Navigation("TransferOperations");
                });

            modelBuilder.Entity("Project.Entities.Models.TransferOperation", b =>
                {
                    b.Navigation("RecipientTransfers");
                });

            modelBuilder.Entity("Project.Entities.Models.Warehouse", b =>
                {
                    b.Navigation("DeliveryHistory");

                    b.Navigation("Invoices");

                    b.Navigation("Stocks");

                    b.Navigation("TransferHistory");

                    b.Navigation("deliveries");

                    b.Navigation("stockChangeHistories");

                    b.Navigation("transfers");
                });
#pragma warning restore 612, 618
        }
    }
}
